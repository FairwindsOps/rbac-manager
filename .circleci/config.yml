version: 2

references:
  docker_build_and_push: &docker_build_and_push
    run:
      name: Docker login, build, and push
      command: |
        docker login quay.io -u="reactiveops+circleci" -p="${quay_token}"
        docker build -f Dockerfile -t quay.io/reactiveops/rbac-manager:$DOCKER_BASE_TAG .
        docker push quay.io/reactiveops/rbac-manager:$DOCKER_BASE_TAG

jobs:
  test:
    docker:
      - image: circleci/golang:1.12

    working_directory: /go/src/github.com/reactiveops/rbac-manager

    steps:
      - checkout
      - run: go get -u golang.org/x/lint/golint
      - run: go list ./... | grep -v vendor | xargs golint -set_exit_status
      - run: go list ./... | grep -v vendor | xargs go vet
      - run: go test ./... -coverprofile=coverage.txt -covermode=atomic
      - run: bash <(curl -s https://codecov.io/bash)

  build:
    docker:
      - image: circleci/buildpack-deps:jessie
    steps:
      - checkout
      - setup_remote_docker
      - run: echo 'export DOCKER_BASE_TAG=dev-$CIRCLE_SHA1' >> $BASH_ENV
      - *docker_build_and_push

  release:
    docker:
      - image: circleci/buildpack-deps:jessie
    steps:
      - checkout
      - setup_remote_docker
      - run: echo 'export DOCKER_BASE_TAG=$CIRCLE_TAG' >> $BASH_ENV
      - *docker_build_and_push


workflows:
  version: 2
  build:
    jobs:
      - test
      - build:
          context: org-global
          filters:
            tags:
              only: /^testing-.*/
  release:
    jobs:
      - release:
          context: org-global
          filters:
            branches:
              ignore: /.*/
            tags:
              ignore: /^testing-.*/
